from aiogram import Router, Bot, types
from aiogram.fsm.context import FSMContext
from aiogram.exceptions import TelegramForbiddenError
import logging
from config import SUPPORT_CHAT_ID  # ‚úÖ ID —á–∞—Ç–∞ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤

router = Router()

@router.message()
async def forward_user_message(message: types.Message, bot: Bot, state: FSMContext):
    """üì® –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —á–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è FSM)"""

    # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ FSM
    state_data = await state.get_state()
    if state_data is not None:
        return  # üí° –ï—Å–ª–∏ FSM –∞–∫—Ç–∏–≤–µ–Ω ‚Äì –Ω–µ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

    user_id = message.from_user.id
    user_name = message.from_user.full_name
    text = message.text

    forward_text = (
        f"üì® *–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:*\n"
        f"üë§ {user_name} (ID: `{user_id}`)\n\n"
        f"üí¨ {text}"
    )

    try:
        await bot.send_message(chat_id=int(SUPPORT_CHAT_ID), text=forward_text, parse_mode="Markdown")
    except TelegramForbiddenError:
        logging.warning("üö´ –ß–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤: {e}")
