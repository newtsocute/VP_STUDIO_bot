from aiogram import Router, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.exceptions import TelegramForbiddenError
from .fsm import UserState
import aiosqlite
import logging

router = Router()

async def save_user(user_id: int):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    async with aiosqlite.connect("users.db") as db:
        await db.execute("CREATE TABLE IF NOT EXISTS users (user_id INTEGER PRIMARY KEY)")
        await db.execute("INSERT OR IGNORE INTO users (user_id) VALUES (?)", (user_id,))
        await db.commit()

@router.message(Command("start"))
async def start(message: types.Message, state: FSMContext):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Å –ø–æ–¥–ø–∏—Å–∫–æ–π + –≤–∫–ª—é—á–∞–µ–º FSM"""
    try:
        await save_user(message.from_user.id)

        subscribe_keyboard = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url="https://t.me/vp_test_bot_channel")]]
        )

        await message.answer(
            "üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n"
            "–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç VP-studio!\n"
            "–ü–æ–∂–∞–ª—É–π, –ª—É—á—à–∞—è —Å–µ—Ç—å —Å–∞–ª–æ–Ω–æ–≤ –≤ –ü—Ä–∏–º–æ—Ä—Å–∫–æ–º –∫—Ä–∞–µ! üéÄ\n\n"
            "üéÅ –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à Telegram-–∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ *‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É*.",
            reply_markup=subscribe_keyboard,
            parse_mode="Markdown"
        )

        check_keyboard = InlineKeyboardMarkup(
            inline_keyboard=[[InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription")]]
        )

        await message.answer("–ü–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:", reply_markup=check_keyboard)
        await state.set_state(UserState.waiting_for_subscription)

    except TelegramForbiddenError:
        logging.warning(f"üö´ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞. –£–¥–∞–ª—è–µ–º –∏–∑ –±–∞–∑—ã.")
        await remove_user_from_db(message.from_user.id)
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ start: {e}")

async def remove_user_from_db(user_id: int):
    """–£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    async with aiosqlite.connect("users.db") as db:
        await db.execute("DELETE FROM users WHERE user_id = ?", (user_id,))
        await db.commit()
